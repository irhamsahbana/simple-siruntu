version: '3.7'

services:
  siruntu_app:
    build:
      args:
        user: siruntu
        uid: 1000
      context: ./
      dockerfile: siruntu-app.dockerfile
    image: irhamsahbana/siruntu-app:latest
    container_name: siruntu-app
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./volumes/share:/share
    networks:
      - siruntu
    depends_on:
      - siruntu_db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  siruntu_nginx:
    image: nginx:stable-alpine
    container_name: siruntu-nginx
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./etc/nginx:/etc/nginx/conf.d
      - ./volumes/logs/nginx:/var/log/nginx
    networks:
      - siruntu

  siruntu_db:
    container_name: siruntu-db
    image: mariadb:10.3
    restart: unless-stopped
    networks:
      - siruntu
    volumes:
      - ./volumes/mysql:/var/lib/mysql
      - ./etc/my.cnf.d:/etc/mysql/conf.d
      - ./volumes/share:/share
    env_file:
     - .env.docker

  siruntu_kurento:
    image: kurento/kurento-media-server:6.16.0
    container_name: siruntu-kurento
    restart: unless-stopped
    ports:
      - 8888:8888
    volumes:
      - ./:/var/www
      - ./temp:/tmp
    network_mode: "host"
    env_file:
      - .env.docker

  siruntu_coturn:
    image: instrumentisto/coturn:4
    container_name: siruntu-coturn
    restart: unless-stopped
    volumes:
      - ./etc/coturn.d/coturn.conf:/etc/coturn/turnserver.conf
    network_mode: "host"

  siruntu_signaling:
    build:
      context: ./
      dockerfile: siruntu-signaling.dockerfile
    image: irhamsahbana/siruntu-signaling:latest
    container_name: siruntu-signaling
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./:/app

networks:
  siruntu: {}
